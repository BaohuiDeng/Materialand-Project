{"ast":null,"code":"import _defineProperty from \"/Users/baohuideng/Downloads/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/baohuideng/Downloads/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baohuideng/Downloads/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/baohuideng/Downloads/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/baohuideng/Downloads/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/baohuideng/Downloads/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/baohuideng/Downloads/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/baohuideng/Downloads/testdeployUDE-final/client/src/components/Search.js\";\nimport React from 'react';\nimport { Button, Container, Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport Footer from './Footer';\nimport axios from \"axios\";\nimport { Row, Col } from \"reactstrap\";\nimport moment from 'moment';\nimport 'moment-timezone';\nimport like from '../assets/images/like.png';\nimport dislike from '../assets/images/dislike.png';\nimport download from '../assets/images/download.png';\nimport { FormGroup, Form } from 'reactstrap';\nimport { UrlContext } from '../contexts/urlContext';\n\nvar Search = /*#__PURE__*/function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchItem: \"\",\n      compelete: false,\n      list: \"\",\n      posts: [],\n      files: ''\n    };\n\n    _this.getSearch = function () {\n      axios({\n        url: 'http://localhost:3000/search',\n        method: 'POST',\n        data: {\n          'category': _this.state.searchItem\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        _this.setState({\n          posts: data\n        });\n      });\n    };\n\n    _this.displayBlogPost = function (posts) {\n      if (!posts.length) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jumbotron mx-auto mt-3\",\n        style: {\n          \"width\": \"70%\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-center\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 99\n        }\n      }, \"There is currently no posts yet\"), \" \");\n      return posts.map(function (posts, index) {\n        var _React$createElement;\n\n        return /*#__PURE__*/React.createElement(Col, {\n          lg: {\n            span: 3,\n            offset: 1\n          },\n          sm: \"12\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"jumbotron mt-5 mx-5 \",\n          style: {\n            \"width\": \"70%\",\n            \"outlineStyle\": \"solid\",\n            \"outlineWidth\": \"1px\",\n            \"outlineColor\": \"#5c7d92\",\n            \"backgroundColor\": \"white\",\n            \"boxShadow\": \"5px 5px 5px 5px #dfebf2\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-3 mt-0\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: _this.getImage(posts.userImage),\n          style: {\n            \"width\": \"110px\",\n            \"height\": \"110px\",\n            \"margin-top\": \"-10px\",\n            \"borderRadius\": \"50%\",\n            \"border\": 'solid 1px lightgrey'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-7 d-flex\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"ml-md-3 \",\n          style: {\n            color: '#5c7d92',\n            fontWeight: 'bold'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }, posts.username, /*#__PURE__*/React.createElement(\"br\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 107\n          }\n        }), /*#__PURE__*/React.createElement(\"small\", {\n          className: \"text-muted mt-1 mx-lg-0 ml-md-3 \",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }, moment(posts.date.$date).format(\"DD/MMM/YYYY\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 ml-3\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"ml-3\",\n          style: {\n            \"color\": \"darkgrey\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        }, posts.like.length)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 ml-2\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: like,\n          className: \"like\",\n          title: \"like\",\n          onClick: function onClick() {\n            return _this.plusLike(posts._id);\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 mx-2\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: dislike,\n          className: \"dislike\",\n          title: \"dislike\",\n          onClick: function onClick() {\n            return _this.plusDisLike(posts._id);\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 ml-2\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          style: {\n            \"color\": \"darkgrey\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }\n        }, posts.dislike.length)))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }\n        }), posts._id.$oid == _this.state.likedPostId && /*#__PURE__*/React.createElement(\"small\", {\n          style: {\n            color: '#E67E22'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }\n        }, _this.state.displaylikemsg), posts._id.$oid == _this.state.dislikedPostId && /*#__PURE__*/React.createElement(\"small\", {\n          style: {\n            color: '#E67E22'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }\n        }, _this.state.displaydislikemsg), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"text-left font-weight-bold mt-2\",\n          style: {\n            color: 'black'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }\n        }, posts.title), /*#__PURE__*/React.createElement(\"p\", {\n          className: \" text-left \",\n          style: {\n            \"word-wrap\": \"break-word\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          style: {\n            color: 'black'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 81\n          }\n        }, \"Category:\"), \" \", posts.category), /*#__PURE__*/React.createElement(\"p\", (_React$createElement = {\n          className: \" text-left \",\n          style: {\n            \"word-wrap\": \"break-word\"\n          }\n        }, _defineProperty(_React$createElement, \"style\", {\n          color: '#01061c'\n        }), _defineProperty(_React$createElement, \"__self\", _assertThisInitialized(_assertThisInitialized(_this))), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }), _React$createElement), posts.content), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row my-4 justify-content-start\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: download,\n          className: \"downloadImg\",\n          onClick: _this.getFile.bind(_assertThisInitialized(_assertThisInitialized(_this)), posts),\n          title: \"download\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-3\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-nowrap\",\n          style: {\n            \"width\": \"6rem\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }\n        }, posts.file))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row postBox mx-0 \",\n          style: {\n            \"backgroundColor\": \"#f0f0f0\",\n            \"boxShadow\": \"4px 4px 4px 4px #f0f0f0\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }\n        }, posts.comments.map(function (value, index) {\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-sm-8\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            className: \"mt-2 ml-2 small\",\n            style: {\n              color: '#5c7d92',\n              fontWeight: \"bold\"\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }\n          }, posts.comments[index]['username']), /*#__PURE__*/React.createElement(\"small\", {\n            className: \"text-muted mx-3\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }\n          }, moment(posts.comments[index].date.$date).format(\"DD/MMM/YYYY\")))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row col-sm-12\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \" text-left ml-3\",\n            style: {\n              \"word-wrap\": \"break-word\"\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }\n          }, \" \", posts.comments[index]['comment']), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"divider\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }\n          })));\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row col-sm-12 py-2 mx-0\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          inline: true,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"textarea\",\n          name: \"text\",\n          id: posts._id,\n          placeholder: \"new comment\",\n          onChange: function onChange(e) {\n            _this.setState({\n              comment: e.target.value,\n              displaymsg: ''\n            });\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          className: \"ml-3 btn-primary\",\n          onClick: function onClick() {\n            _this.addComment(posts._id); // this.setState({comment:''})\n\n          },\n          size: \"sm\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 23\n          }\n        }, \"send\"))))));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"getImage\",\n    value: function getImage(file) {\n      var img = file;\n\n      if (file !== 'images/userProfile.png') {\n        img = this.state.serverUrl + 'file/' + file;\n      }\n\n      return img;\n    } // Search = () => {\n    //     if (this.state.searchItem !== '') {\n    //         this.setState({\n    //             compelete: true\n    //         });\n    //         axios({\n    //             url: 'http://localhost:8080/search/'+ this.state.searchItem,\n    //         }).then(response => {\n    //             this.setState({\n    //                     list: response.data,\n    //                 }\n    //             );\n    //             console.log(this.state.list);\n    //         }).catch(error => {\n    //             console.log(error);\n    //         })\n    //     } else {\n    //         this.setState({\n    //             logCompelete: false,\n    //         })\n    //     }\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'block',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"containerSearch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"search...\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            searchItem: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"searchImg\",\n        src: require('../assets/images/search.png'),\n        title: \"search\",\n        alt: \"search\",\n        onClick: this.getSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 63\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        className: \"blog mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, this.displayBlogPost(this.state.posts)), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      })));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport { Search as default };","map":{"version":3,"sources":["/Users/baohuideng/Downloads/testdeployUDE-final/client/src/components/Search.js"],"names":["React","Button","Container","Input","InputGroup","InputGroupAddon","Footer","axios","Row","Col","moment","like","dislike","download","FormGroup","Form","UrlContext","Search","state","searchItem","compelete","list","posts","files","getSearch","url","method","data","then","response","setState","displayBlogPost","length","map","index","span","offset","getImage","userImage","color","fontWeight","username","date","$date","format","plusLike","_id","plusDisLike","$oid","likedPostId","displaylikemsg","dislikedPostId","displaydislikemsg","title","category","content","getFile","bind","file","comments","value","e","comment","target","displaymsg","addComment","img","serverUrl","require","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Container, Input, InputGroup, InputGroupAddon} from \"reactstrap\";\nimport Footer from './Footer';\nimport axios from \"axios\";\nimport { Row, Col} from \"reactstrap\";\nimport moment from 'moment';\nimport 'moment-timezone';\nimport like from '../assets/images/like.png';\nimport dislike from '../assets/images/dislike.png';\nimport download from '../assets/images/download.png';\nimport {  FormGroup, Form } from 'reactstrap';\nimport { UrlContext } from '../contexts/urlContext';\n\n\n\n\nexport default class Search extends React.Component {\n    state = {\n        searchItem: \"\",\n        compelete: false,\n        list: \"\",\n        posts:[],\n        files:'',\n\n\n    };\n    getSearch = () => {\n        axios({\n          url: 'http://localhost:3000/search',\n          method: 'POST',\n          data:{\n              'category':this.state.searchItem\n          }\n      }).then(response => {\n        const data = response.data;\n        this.setState({\n          posts:data \n        })\n      })\n    }\n\n    getImage(file){\n        let img =file\n        if(file!=='images/userProfile.png'){\n            img= this.state.serverUrl +'file/'+ file\n          }\n          return img\n    }\n    // Search = () => {\n\n    //     if (this.state.searchItem !== '') {\n\n    //         this.setState({\n    //             compelete: true\n    //         });\n\n    //         axios({\n    //             url: 'http://localhost:8080/search/'+ this.state.searchItem,\n    //         }).then(response => {\n\n\n    //             this.setState({\n\n    //                     list: response.data,\n    //                 }\n    //             );\n    //             console.log(this.state.list);\n\n    //         }).catch(error => {\n    //             console.log(error);\n\n    //         })\n    //     } else {\n    //         this.setState({\n    //             logCompelete: false,\n    //         })\n    //     }\n\n\n    // };\n\n    displayBlogPost = (posts)=> {\n        \n\n        if(!posts.length) return <div className='jumbotron mx-auto mt-3' style={{\"width\":\"70%\"}}> <h4 className='text-center'>There is currently no posts yet</h4> </div>\n\n        return posts.map((posts,index) => (\n          <Col lg={{ span: 3, offset: 1 }}   sm=\"12\">\n             \n             <div className=\"jumbotron mt-5 mx-5 \" \n             style={\n             {\"width\":\"70%\",\"outlineStyle\": \"solid\",\"outlineWidth\":\"1px\",\"outlineColor\":\"#5c7d92\",\"backgroundColor\":\"white\",\"boxShadow\":\"5px 5px 5px 5px #dfebf2\"}}>\n              \n                <div className=\"row\">\n                  <div className=\"col-sm-3 mt-0\">\n                    <img src={this.getImage(posts.userImage)} \n                    style={{\"width\": \"110px\",\"height\":\"110px\",\"margin-top\":\"-10px\",\n                    \"borderRadius\": \"50%\", \"border\":'solid 1px lightgrey'}}/>\n                  </div>\n\n                  <div className=\"col-sm-7 d-flex\">\n                    <a  className=\"ml-md-3 \" style={{color:'#5c7d92',fontWeight:'bold'}} >{posts.username}<br/>                  \n                    <small className=\"text-muted mt-1 mx-lg-0 ml-md-3 \">{moment(posts.date.$date).format(\"DD/MMM/YYYY\")}</small>\n                    </a>\n                  <div className=\"col-sm-1 ml-3\" >\n                    <h6 className=\"ml-3\" style={{\"color\": \"darkgrey\"}}>\n                      {posts.like.length}\n                    </h6>\n                  </div>\n                  <div className=\"col-sm-1 ml-2\">\n                    <img src={like} className=\"like\" title=\"like\" onClick={()=>this.plusLike(posts._id)}/>\n                  </div>\n                  <div className=\"col-sm-1 mx-2\">\n                    <img src={dislike} className=\"dislike\" title=\"dislike\" onClick={()=>this.plusDisLike(posts._id)}/>\n                  </div>\n                  <div className=\"col-sm-1 ml-2\">\n                    <h6 style={{\"color\": \"darkgrey\"}}>\n                      {posts.dislike.length}\n                    </h6>\n                  </div>\n\n               \n                </div>\n\n\n                </div>\n                <br></br>\n                { posts._id.$oid==this.state.likedPostId &&\n                  <small style={{color:'#E67E22'}}>{this.state.displaylikemsg}</small>\n                }\n                { posts._id.$oid==this.state.dislikedPostId &&\n                  <small style={{color:'#E67E22'}}>{this.state.displaydislikemsg}</small>\n                }\n\n                <hr />\n                    <h5 className=\"text-left font-weight-bold mt-2\" style={{color:'black'}}>{posts.title}</h5>\n                <p className=\" text-left \" style={{\"word-wrap\": \"break-word\"}} ><span className=\"font-weight-bold\" style={{color:'black'}}>Category:</span> {posts.category}</p>\n                <p className=\" text-left \" style={{\"word-wrap\": \"break-word\"}} style={{color:'#01061c'}} >{posts.content}</p>\n\n              \n                <div className=\"row my-4 justify-content-start\">\n                <div className=\"col-sm-1\">\n                    <img src={download} className=\"downloadImg\" \n                    onClick={this.getFile.bind(this,posts)} \n                    title=\"download\"/>\n                  </div>\n                  <div className=\"col-sm-3\">\n                    <p className=\"text-nowrap\" style={{\"width\": \"6rem\"}}>\n                      {posts.file}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"row postBox mx-0 \" style={{\"backgroundColor\":\"#f0f0f0\",\"boxShadow\":\"4px 4px 4px 4px #f0f0f0\"}}>\n\n                {posts.comments.map((value, index) => {\n                  return(\n                    <React.Fragment>\n                      <div className=\"row\" >\n                          <div className=\"col-sm-8\">\n                            <a className=\"mt-2 ml-2 small\"  style={{color:'#5c7d92',fontWeight:\"bold\"}}>{posts.comments[index]['username']}</a>\n                            <small className=\"text-muted mx-3\">{moment(posts.comments[index].date.$date).format(\"DD/MMM/YYYY\")}</small>\n                          </div>\n                      </div>\n                      <div className=\"row col-sm-12\" >\n                        <p className=\" text-left ml-3\" style={{\"word-wrap\": \"break-word\"}} > {posts.comments[index]['comment']}</p>\n                        <div className=\"divider\"></div>\n                      </div>\n                    </React.Fragment>\n                  );\n                })}\n\n                  <div className=\"row col-sm-12 py-2 mx-0\" >\n                    <Form inline>\n                      <FormGroup>\n                        <Input type=\"textarea\" name=\"text\" id={posts._id} placeholder='new comment' \n                        onChange={e=>{this.setState({comment:e.target.value, displaymsg : ''})}}/>\n                      </FormGroup>\n                      <Button className=\"ml-3 btn-primary\"\n                      onClick={()=>{\n                      this.addComment(posts._id);\n                      // this.setState({comment:''})\n                      }}\n                      size=\"sm\">send</Button>\n                    </Form>\n                  </div>\n                  \n                </div>\n\n            </div>\n         </Col>\n\n            ));\n    }\n        render()\n        {\n            return (\n\n                <div className={'block'}>\n                    <br/>\n                    <Container>\n\n                        <br/>\n\n                        <div className=\"containerSearch\">\n\n                            <InputGroup>\n                                <Input placeholder=\"search...\" onChange={e => {\n                                    this.setState({searchItem: e.target.value})\n                                }}/>\n                                <InputGroupAddon addonType=\"append\">\n                                    <Button color=\"secondary\"><img className=\"searchImg\"\n                                                                   src={require('../assets/images/search.png')}\n                                                                   title={\"search\"} alt={\"search\"}\n                                                                   onClick={this.getSearch}/></Button>\n                                </InputGroupAddon>\n                            </InputGroup>\n\n\n                        </div>\n                        <Row className=\"blog mt-5\">\n               {this.displayBlogPost(this.state.posts)}\n             </Row>\n\n                        <Footer/>\n\n                    </Container>\n                </div>\n            );\n        }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}