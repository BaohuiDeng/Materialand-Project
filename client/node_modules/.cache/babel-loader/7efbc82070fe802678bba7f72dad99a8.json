{"ast":null,"code":"import _defineProperty from \"/Users/baohuideng/Desktop/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/baohuideng/Desktop/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baohuideng/Desktop/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/baohuideng/Desktop/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/baohuideng/Desktop/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/baohuideng/Desktop/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/baohuideng/Desktop/testdeployUDE-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/baohuideng/Desktop/testdeployUDE-final/client/src/components/GetPosts.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport like from '../assets/images/like.png';\nimport dislike from '../assets/images/dislike.png';\nimport download from '../assets/images/download.png';\nimport jwt_decode from 'jwt-decode';\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Button, FormGroup, Form, Input } from 'reactstrap';\nimport Footer from './Footer';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport { UrlContext } from '../contexts/urlContext';\n\nvar GetPosts = /*#__PURE__*/function (_Component) {\n  _inherits(GetPosts, _Component);\n\n  function GetPosts() {\n    var _this;\n\n    _classCallCheck(this, GetPosts);\n\n    var token = localStorage.usertoken;\n    var decoded = jwt_decode(token);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetPosts).call(this));\n\n    _this.componentDidMount = function () {\n      console.log(_this.state.files);\n\n      _this.getAllPost();\n\n      _this.getComments();\n    };\n\n    _this.plusLike = function (e) {\n      axios({\n        url: _this.state.serverUrl + 'plusLike',\n        method: 'POST',\n        data: {\n          \"username\": _this.state.username,\n          \"email\": _this.state.email,\n          \"id\": e.$oid\n        }\n      }).then(function (response) {\n        console.log(response.data);\n\n        if (response.data.displaymsg) {\n          _this.setState({\n            displaylikemsg: response.data.displaymsg,\n            likedPostId: e.$oid\n          });\n        }\n\n        _this.getAllPost();\n      });\n    };\n\n    _this.plusDisLike = function (e) {\n      axios({\n        url: _this.state.serverUrl + 'plusDislike',\n        method: 'POST',\n        data: {\n          \"username\": _this.state.username,\n          \"email\": _this.state.email,\n          \"id\": e.$oid\n        }\n      }).then(function (response) {\n        console.log(response.data);\n\n        if (response.data.displaymsg) {\n          _this.setState({\n            displaydislikemsg: response.data.displaymsg,\n            dislikedPostId: e.$oid\n          });\n        }\n\n        _this.getAllPost();\n      });\n    };\n\n    _this.addComment = function (e) {\n      console.log('add comment');\n      axios({\n        url: _this.state.serverUrl + 'addcomment',\n        method: 'POST',\n        data: {\n          \"username\": _this.state.username,\n          \"email\": _this.state.email,\n          \"comment\": _this.state.comment,\n          \"id\": e.$oid //here should get the post id field\n\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        _this.getAllPost();\n\n        _this.setState({\n          comments: data\n        });\n\n        console.log(\"add new comments\");\n\n        _this.getComments(e.$oid);\n      });\n    };\n\n    _this.getComments = function (e) {\n      axios({\n        url: _this.state.serverUrl + 'getcomments',\n        method: 'POST',\n        data: {\n          \"id\": e //e.$oid //here should get the post id field\n\n        }\n      }).then(function (response) {\n        var data = response.data;\n\n        _this.setState({\n          comments: data\n        });\n\n        console.log(\"get all comments\");\n      });\n    };\n\n    _this.getAllPost = function () {\n      axios.get(_this.state.serverUrl + 'users/posts').then(function (response) {\n        var data = response.data;\n\n        _this.setState({\n          posts: data\n        });\n\n        console.log('Data has been received!');\n      }).catch(function () {\n        alert('Error retrieving data!!');\n      });\n    };\n\n    _this.displayBlogPost = function (posts) {\n      if (!posts.length) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jumbotron mx-auto mt-3\",\n        style: {\n          \"width\": \"70%\"\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 34\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-center\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 99\n        }\n      }, \"There is currently no posts yet\"), \" \");\n      return posts.map(function (posts, index) {\n        var _React$createElement;\n\n        return /*#__PURE__*/React.createElement(Col, {\n          lg: {\n            span: 3,\n            offset: 1\n          },\n          sm: \"12\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"jumbotron mt-5 mx-5 \",\n          style: {\n            \"width\": \"70%\",\n            \"outlineStyle\": \"solid\",\n            \"outlineWidth\": \"1px\",\n            \"outlineColor\": \"#5c7d92\",\n            \"backgroundColor\": \"white\",\n            \"boxShadow\": \"5px 5px 5px 5px #dfebf2\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-3 mt-0\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: _this.getImage(posts.userImage),\n          style: {\n            \"width\": \"110px\",\n            \"height\": \"110px\",\n            \"margin-top\": \"-10px\",\n            \"borderRadius\": \"50%\",\n            \"border\": 'solid 1px lightgrey'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-7 d-flex\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"ml-md-3 \",\n          style: {\n            color: '#5c7d92',\n            fontWeight: 'bold'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }\n        }, posts.username, /*#__PURE__*/React.createElement(\"br\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 107\n          }\n        }), /*#__PURE__*/React.createElement(\"small\", {\n          className: \"text-muted mt-1 mx-lg-0 ml-md-3 \",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }\n        }, moment(posts.date.$date).format(\"DD/MMM/YYYY\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 ml-3\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"ml-3\",\n          style: {\n            \"color\": \"darkgrey\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }\n        }, posts.like.length)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 ml-2\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: like,\n          className: \"like\",\n          title: \"like\",\n          onClick: function onClick() {\n            return _this.plusLike(posts._id);\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 mx-2\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: dislike,\n          className: \"dislike\",\n          title: \"dislike\",\n          onClick: function onClick() {\n            return _this.plusDisLike(posts._id);\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1 ml-2\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          style: {\n            \"color\": \"darkgrey\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }\n        }, posts.dislike.length)))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }\n        }), posts._id.$oid == _this.state.likedPostId && /*#__PURE__*/React.createElement(\"small\", {\n          style: {\n            color: '#E67E22'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }\n        }, _this.state.displaylikemsg), posts._id.$oid == _this.state.dislikedPostId && /*#__PURE__*/React.createElement(\"small\", {\n          style: {\n            color: '#E67E22'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }\n        }, _this.state.displaydislikemsg), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"text-left font-weight-bold mt-2\",\n          style: {\n            color: 'black'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }\n        }, posts.title), /*#__PURE__*/React.createElement(\"p\", {\n          className: \" text-left \",\n          style: {\n            \"word-wrap\": \"break-word\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          style: {\n            color: 'black'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 81\n          }\n        }, \"Category:\"), \" \", posts.category), /*#__PURE__*/React.createElement(\"p\", (_React$createElement = {\n          className: \" text-left \",\n          style: {\n            \"word-wrap\": \"break-word\"\n          }\n        }, _defineProperty(_React$createElement, \"style\", {\n          color: '#01061c'\n        }), _defineProperty(_React$createElement, \"__self\", _assertThisInitialized(_assertThisInitialized(_this))), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }), _React$createElement), posts.content), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row my-4 justify-content-start\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-1\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: download,\n          className: \"downloadImg\",\n          onClick: _this.getFile.bind(_assertThisInitialized(_assertThisInitialized(_this)), posts),\n          title: \"download\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-3\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-nowrap\",\n          style: {\n            \"width\": \"6rem\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }\n        }, posts.file))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row postBox mx-0 \",\n          style: {\n            \"backgroundColor\": \"#f0f0f0\",\n            \"boxShadow\": \"4px 4px 4px 4px #f0f0f0\"\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }\n        }, posts.comments.map(function (value, index) {\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-sm-8\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            className: \"mt-2 ml-2 small\",\n            style: {\n              color: '#5c7d92',\n              fontWeight: \"bold\"\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }\n          }, posts.comments[index]['username']), /*#__PURE__*/React.createElement(\"small\", {\n            className: \"text-muted mx-3\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }\n          }, moment(posts.comments[index].date.$date).format(\"DD/MMM/YYYY\")))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row col-sm-12\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \" text-left ml-3\",\n            style: {\n              \"word-wrap\": \"break-word\"\n            },\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }\n          }, \" \", posts.comments[index]['comment']), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"divider\",\n            __self: _assertThisInitialized(_assertThisInitialized(_this)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }\n          })));\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row col-sm-12 py-2 mx-0\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          inline: true,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"textarea\",\n          name: \"text\",\n          id: posts._id,\n          placeholder: \"new comment\",\n          onChange: function onChange(e) {\n            _this.setState({\n              comment: e.target.value,\n              displaymsg: ''\n            });\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          className: \"ml-3 btn-primary\",\n          onClick: function onClick() {\n            _this.addComment(posts._id); // this.setState({comment:''})\n\n          },\n          size: \"sm\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 23\n          }\n        }, \"send\"))))));\n      });\n    };\n\n    _this.state = {\n      email: decoded.identity.email,\n      username: decoded.identity.username,\n      comment: '',\n      comments: [],\n      image: '',\n      files: '',\n      posts: [],\n      like: '',\n      dislike: '',\n      idLikedPost: '',\n      idDislikedPost: '',\n      serverUrl: UrlContext._currentValue,\n      displaydislikemsg: '',\n      displaylikemsg: '',\n      likedPostId: '',\n      dislikedPostId: ''\n    };\n    _this.getFile = _this.getFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addComment = _this.addComment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getComments = _this.getComments.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GetPosts, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"getFile\",\n    value: function getFile(e) {\n      var fName = e.file;\n      var urlFile = this.state.serverUrl + 'file/' + fName;\n      axios({\n        url: urlFile,\n        //your url\n        method: 'Get',\n        responseType: 'blob',\n        data: {\n          \"file\": fName\n        } // important\n\n      }).then(function (response) {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', fName); //or any other extension\n\n        document.body.appendChild(link);\n        link.click();\n      });\n    }\n  }, {\n    key: \"getImage\",\n    value: function getImage(file) {\n      var img = file;\n\n      if (file !== 'images/userProfile.png') {\n        img = this.state.serverUrl + 'file/' + file;\n      }\n\n      return img;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        onClick: function onClick(e) {\n          _this2.setState({\n            displaylikemsg: '',\n            displaydislikemsg: ''\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-5 float-lg-right mx-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card\",\n        style: {\n          \"width\": \"18rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        class: \"card-img-top\",\n        src: 'images/sidebar.jpg',\n        alt: \"Card image cap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        class: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 20\n        }\n      }, \"News\"), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 20\n        }\n      }, \"Flaskpro presents Materialand.\")), /*#__PURE__*/React.createElement(\"ul\", {\n        class: \"list-group list-group-flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 20\n        }\n      }, \"Sharing Materials\"), /*#__PURE__*/React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 20\n        }\n      }, \"Advance Web\"), /*#__PURE__*/React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 20\n        }\n      }, \"Responsive Design\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        className: \"card-link text-muted \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 20\n        }\n      }, \"About us\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://www.uni-due.de/soco/\",\n        className: \"card-link text-muted \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 20\n        }\n      }, \" University \")))), /*#__PURE__*/React.createElement(Row, {\n        className: \"blog mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 14\n        }\n      }, this.displayBlogPost(this.state.posts))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 12\n        }\n      })));\n    }\n  }]);\n\n  return GetPosts;\n}(Component);\n\nexport { GetPosts as default };","map":{"version":3,"sources":["/Users/baohuideng/Desktop/testdeployUDE-final/client/src/components/GetPosts.js"],"names":["React","Component","axios","like","dislike","download","jwt_decode","Container","Row","Col","Button","FormGroup","Form","Input","Footer","moment","UrlContext","GetPosts","token","localStorage","usertoken","decoded","componentDidMount","console","log","state","files","getAllPost","getComments","plusLike","e","url","serverUrl","method","data","username","email","$oid","then","response","displaymsg","setState","displaylikemsg","likedPostId","plusDisLike","displaydislikemsg","dislikedPostId","addComment","comment","comments","get","posts","catch","alert","displayBlogPost","length","map","index","span","offset","getImage","userImage","color","fontWeight","date","$date","format","_id","title","category","content","getFile","bind","file","value","target","identity","image","idLikedPost","idDislikedPost","_currentValue","onChange","name","fName","urlFile","responseType","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","img"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport like from '../assets/images/like.png';\nimport dislike from '../assets/images/dislike.png';\nimport download from '../assets/images/download.png';\nimport jwt_decode from 'jwt-decode';\nimport {Container, Row, Col} from \"reactstrap\";\nimport {  Button, FormGroup, Form, Input } from 'reactstrap';\nimport Footer from './Footer'\nimport moment from 'moment';\nimport 'moment-timezone';\nimport { UrlContext } from '../contexts/urlContext';\n\nexport default class GetPosts extends Component {\n  constructor() {\n  const token = localStorage.usertoken\n  const decoded = jwt_decode(token)\n      super()\n      this.state = {\n         email:decoded.identity.email,\n         username:decoded.identity.username,\n         comment:'',\n         comments:[],\n         image:'',\n          files:'',\n          posts:[],\n          like:'',\n          dislike:'',\n          idLikedPost:'',\n          idDislikedPost:'',\n          serverUrl: UrlContext._currentValue,\n          displaydislikemsg:'',\n          displaylikemsg:'',\n          likedPostId:'',          \n          dislikedPostId:'',\n      }\n      this.getFile=this.getFile.bind(this)\n      this.addComment = this.addComment.bind(this)\n      this.onChange = this.onChange.bind(this)\n      this.getComments = this.getComments.bind(this)\n  }\n  componentDidMount = ()=>{\n    console.log(this.state.files)\n    this.getAllPost();\n    this.getComments()\n  }\n  onChange (e) {\n    this.setState({ [e.target.name]: e.target.value })\n}\n  plusLike = (e) => {\n    axios({\n      url: this.state.serverUrl + 'plusLike', \n      method: 'POST',\n      data:{\n        \"username\":this.state.username,\n        \"email\": this.state.email,\n        \"id\": e.$oid \n      } \n    }).then((response) => {\n        console.log(response.data);\n        if (response.data.displaymsg){\n          this.setState({ \n            displaylikemsg : response.data.displaymsg,\n            likedPostId : e.$oid\n\n          })\n        }        \n        this.getAllPost();\n    });        \n  } \n  plusDisLike = (e) => {\n      axios({\n        url: this.state.serverUrl +'plusDislike', \n        method: 'POST',\n        data:{\n          \"username\":this.state.username,\n          \"email\": this.state.email,\n          \"id\": e.$oid \n        } \n      }).then((response) => {\n          console.log(response.data);\n          \n          if (response.data.displaymsg){\n            this.setState({ \n              displaydislikemsg : response.data.displaymsg,\n              dislikedPostId : e.$oid\n            })\n          }   \n          this.getAllPost();\n      });\n  } \n  addComment = (e) =>{\n          console.log('add comment')\n          axios({\n            url: this.state.serverUrl +'addcomment',\n            method: 'POST',\n            data:{\n              \"username\":this.state.username,\n              \"email\": this.state.email,\n              \"comment\": this.state.comment,\n              \"id\": e.$oid //here should get the post id field\n            }\n        }).then(response => {\n          const data = response.data;\n          this.getAllPost();\n          this.setState({comments:data})\n            console.log(\"add new comments\")\n            this.getComments(e.$oid)\n        })\n        }\n  getComments = (e) => {\n          axios({\n            url: this.state.serverUrl +'getcomments',\n            method: 'POST',\n            data:{\n              \"id\": e //e.$oid //here should get the post id field\n            }\n        }).then(response => {\n          const data = response.data;\n          this.setState({\n            comments:data,\n        })\n            console.log(\"get all comments\")\n        })\n      }\n  getAllPost = () => {\n            axios.get(this.state.serverUrl +'users/posts')\n            .then((response) => {\n              const data = response.data;\n              this.setState({\n                posts:data \n              })\n              console.log('Data has been received!');\n            })\n            .catch(()=>{\n              alert('Error retrieving data!!');\n          });\n        }\n  getFile(e) {\n          const fName =e.file\n          const urlFile =this.state.serverUrl +'file/'+fName\n          axios({\n            url: urlFile, //your url\n            method: 'Get',\n            responseType: 'blob',\n            data:{\n              \"file\":  fName\n            } // important\n          }).then((response) => {\n             const url = window.URL.createObjectURL(new Blob([response.data]));\n             const link = document.createElement('a');\n             link.href = url;\n             link.setAttribute('download',fName); //or any other extension\n             document.body.appendChild(link);\n             link.click();\n          });\n      }\n  getImage(file){\n        let img =file\n        if(file!=='images/userProfile.png'){\n            img= this.state.serverUrl +'file/'+ file\n          }\n          return img\n    }\n  displayBlogPost = (posts)=> {\n        if(!posts.length) return <div className='jumbotron mx-auto mt-3' style={{\"width\":\"70%\"}}> <h4 className='text-center'>There is currently no posts yet</h4> </div>\n        return posts.map((posts,index) => (\n          <Col lg={{ span: 3, offset: 1 }}   sm=\"12\">\n             <div className=\"jumbotron mt-5 mx-5 \" \n             style={\n             {\"width\":\"70%\",\"outlineStyle\": \"solid\",\"outlineWidth\":\"1px\",\"outlineColor\":\"#5c7d92\",\"backgroundColor\":\"white\",\"boxShadow\":\"5px 5px 5px 5px #dfebf2\"}}>\n                <div className=\"row\">\n                  <div className=\"col-sm-3 mt-0\">\n                    <img src={this.getImage(posts.userImage)} \n                    style={{\"width\": \"110px\",\"height\":\"110px\",\"margin-top\":\"-10px\",\n                    \"borderRadius\": \"50%\", \"border\":'solid 1px lightgrey'}}/>\n                  </div>\n                  <div className=\"col-sm-7 d-flex\">\n                    <a  className=\"ml-md-3 \" style={{color:'#5c7d92',fontWeight:'bold'}} >{posts.username}<br/>                  \n                    <small className=\"text-muted mt-1 mx-lg-0 ml-md-3 \">{moment(posts.date.$date).format(\"DD/MMM/YYYY\")}</small>\n                    </a>\n                  <div className=\"col-sm-1 ml-3\" >\n                    <h6 className=\"ml-3\" style={{\"color\": \"darkgrey\"}}>\n                      {posts.like.length}\n                    </h6>\n                  </div>\n                  <div className=\"col-sm-1 ml-2\">\n                    <img src={like} className=\"like\" title=\"like\" onClick={()=>this.plusLike(posts._id)}/>\n                  </div>\n                  <div className=\"col-sm-1 mx-2\">\n                    <img src={dislike} className=\"dislike\" title=\"dislike\" onClick={()=>this.plusDisLike(posts._id)}/>\n                  </div>\n                  <div className=\"col-sm-1 ml-2\">\n                    <h6 style={{\"color\": \"darkgrey\"}}>\n                      {posts.dislike.length}\n                    </h6>\n                  </div>\n                </div>\n                </div>\n                <br></br>\n                { posts._id.$oid==this.state.likedPostId &&\n                  <small style={{color:'#E67E22'}}>{this.state.displaylikemsg}</small>\n                }\n                { posts._id.$oid==this.state.dislikedPostId &&\n                  <small style={{color:'#E67E22'}}>{this.state.displaydislikemsg}</small>\n                }\n                <hr />\n                    <h5 className=\"text-left font-weight-bold mt-2\" style={{color:'black'}}>{posts.title}</h5>\n                <p className=\" text-left \" style={{\"word-wrap\": \"break-word\"}} ><span className=\"font-weight-bold\" style={{color:'black'}}>Category:</span> {posts.category}</p>\n                <p className=\" text-left \" style={{\"word-wrap\": \"break-word\"}} style={{color:'#01061c'}} >{posts.content}</p>\n                <div className=\"row my-4 justify-content-start\">\n                <div className=\"col-sm-1\">\n                    <img src={download} className=\"downloadImg\" \n                    onClick={this.getFile.bind(this,posts)} \n                    title=\"download\"/>\n                  </div>\n                  <div className=\"col-sm-3\">\n                    <p className=\"text-nowrap\" style={{\"width\": \"6rem\"}}>\n                      {posts.file}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"row postBox mx-0 \" style={{\"backgroundColor\":\"#f0f0f0\",\"boxShadow\":\"4px 4px 4px 4px #f0f0f0\"}}>\n                {posts.comments.map((value, index) => {\n                  return(\n                    <React.Fragment>\n                      <div className=\"row\" >\n                          <div className=\"col-sm-8\">\n                            <a className=\"mt-2 ml-2 small\"  style={{color:'#5c7d92',fontWeight:\"bold\"}}>{posts.comments[index]['username']}</a>\n                            <small className=\"text-muted mx-3\">{moment(posts.comments[index].date.$date).format(\"DD/MMM/YYYY\")}</small>\n                          </div>\n                      </div>\n                      <div className=\"row col-sm-12\" >\n                        <p className=\" text-left ml-3\" style={{\"word-wrap\": \"break-word\"}} > {posts.comments[index]['comment']}</p>\n                        <div className=\"divider\"></div>\n                      </div>\n                    </React.Fragment>\n                  );\n                })}\n                  <div className=\"row col-sm-12 py-2 mx-0\" >\n                    <Form inline>\n                      <FormGroup>\n                        <Input type=\"textarea\" name=\"text\" id={posts._id} placeholder='new comment' \n                        onChange={e=>{this.setState({comment:e.target.value, displaymsg : ''})}}/>\n                      </FormGroup>\n                      <Button className=\"ml-3 btn-primary\"\n                      onClick={()=>{\n                      this.addComment(posts._id);\n                      // this.setState({comment:''})\n                      }}\n                      size=\"sm\">send</Button>\n                    </Form>\n                  </div>\n                </div>\n            </div>\n         </Col>\n            ));\n    }\n\n    render() {\n        return (\n          <React.Fragment >\n            <Container onClick={e=>{this.setState({ displaylikemsg : '',displaydislikemsg : ''})}}>\n             <Row className=\"mt-5 float-lg-right mx-auto\">\n               <div class=\"card\" style={{\"width\": \"18rem\"}}>\n                 <img class=\"card-img-top\" src={'images/sidebar.jpg'} alt=\"Card image cap\" />\n                 <div class=\"card-body\">\n                   <h5 class=\"card-title\">News</h5>\n                   <p class=\"card-text\">Flaskpro presents Materialand.</p>\n                 </div>\n                 <ul class=\"list-group list-group-flush\">\n                   <li class=\"list-group-item\">Sharing Materials</li>\n                   <li class=\"list-group-item\">Advance Web</li>\n                   <li class=\"list-group-item\">Responsive Design</li>\n                 </ul>\n                 <div className=\"card-body\">\n                   <a href=\"#\" className=\"card-link text-muted \">About us</a>\n                   <a href=\"https://www.uni-due.de/soco/\" className=\"card-link text-muted \"> University </a>\n                 </div>\n               </div>\n             </Row>\n             <Row className=\"blog mt-5\">\n               {this.displayBlogPost(this.state.posts)}\n             </Row>\n          </Container>\n           <div className='container-fluid mt-5' > \n           <Footer />\n           </div>\n           </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}